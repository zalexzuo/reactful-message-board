{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{db}from\"./firebase-config\";import{collection,getDocs,updateDoc,doc,deleteDoc,setDoc,query,where}from\"firebase/firestore\";var postsCollectionRef=collection(db,\"posts\");export var getAllPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var responseData,dataArray;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getDocs(postsCollectionRef);case 2:responseData=_context.sent;dataArray=responseData.docs.map(function(doc){return _objectSpread(_objectSpread({},doc.data()),{},{id:doc.id});});return _context.abrupt(\"return\",dataArray);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getAllPosts(){return _ref.apply(this,arguments);};}();export var getMyPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email){var myPostsQuery,responseData,dataArray;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:myPostsQuery=query(postsCollectionRef,where(\"email\",\"==\",email));_context2.next=3;return getDocs(myPostsQuery);case 3:responseData=_context2.sent;dataArray=responseData.docs.map(function(doc){return _objectSpread(_objectSpread({},doc.data()),{},{id:doc.id});});return _context2.abrupt(\"return\",dataArray);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function getMyPosts(_x){return _ref2.apply(this,arguments);};}();export var getSinglePost=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(postId){var postsQuery,responseData,dataArray;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:postsQuery=query(postsCollectionRef,where(\"postid\",\"==\",postId));_context3.next=3;return getDocs(postsQuery);case 3:responseData=_context3.sent;dataArray=responseData.docs.map(function(doc){return _objectSpread(_objectSpread({},doc.data()),{},{id:doc.id});});return _context3.abrupt(\"return\",dataArray[0]);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function getSinglePost(_x2){return _ref3.apply(this,arguments);};}();export var addPost=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(postObj){var docRef;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:docRef=doc(postsCollectionRef);postObj.postid=docRef.id;_context4.next=4;return setDoc(docRef,postObj);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function addPost(_x3){return _ref4.apply(this,arguments);};}();export var editSinglePost=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(postObj){var updateDocRef;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;updateDocRef=doc(db,\"posts\",postObj.postid);_context5.next=4;return setDoc(updateDocRef,postObj,{merge:true});case 4:_context5.next=9;break;case 6:_context5.prev=6;_context5.t0=_context5[\"catch\"](0);alert(\"something went wrong... please try again later!\");case 9:case\"end\":return _context5.stop();}}},_callee5,null,[[0,6]]);}));return function editSinglePost(_x4){return _ref5.apply(this,arguments);};}();// *** remember to set modifieddate\nexport var updatePost=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(postId,postObj){var postDoc;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:postDoc=doc(db,\"posts\",postId);_context6.next=3;return updateDoc(postDoc,postObj);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function updatePost(_x5,_x6){return _ref6.apply(this,arguments);};}();export var deletePost=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(postId){var postDoc;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:console.log(postId);postDoc=doc(db,\"posts\",postId);_context7.next=4;return deleteDoc(postDoc);case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function deletePost(_x7){return _ref7.apply(this,arguments);};}();","map":{"version":3,"names":["db","collection","getDocs","updateDoc","doc","deleteDoc","setDoc","query","where","postsCollectionRef","getAllPosts","responseData","dataArray","docs","map","data","id","getMyPosts","email","myPostsQuery","getSinglePost","postId","postsQuery","addPost","postObj","docRef","postid","editSinglePost","updateDocRef","merge","alert","updatePost","postDoc","deletePost","console","log"],"sources":["/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-api.js"],"sourcesContent":["import { db } from \"./firebase-config\";\nimport {\n  collection,\n  getDocs,\n  updateDoc,\n  doc,\n  deleteDoc,\n  setDoc,\n  query,\n  where,\n} from \"firebase/firestore\";\n\nconst postsCollectionRef = collection(db, \"posts\");\n\nexport const getAllPosts = async () => {\n  const responseData = await getDocs(postsCollectionRef);\n\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n  return dataArray;\n};\n\nexport const getMyPosts = async (email) => {\n  const myPostsQuery = query(postsCollectionRef, where(\"email\", \"==\", email));\n  const responseData = await getDocs(myPostsQuery);\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n  return dataArray;\n};\n\nexport const getSinglePost = async (postId) => {\n  const postsQuery = query(postsCollectionRef, where(\"postid\", \"==\", postId));\n  const responseData = await getDocs(postsQuery);\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n\n  return dataArray[0];\n};\n\nexport const addPost = async (postObj) => {\n  const docRef = doc(postsCollectionRef);\n  postObj.postid = docRef.id;\n  await setDoc(docRef, postObj);\n  //await addDoc(postsCollectionRef, postObj);\n};\n\nexport const editSinglePost = async (postObj) => {\n  try {\n    const updateDocRef = doc(db, \"posts\", postObj.postid);\n    await setDoc(updateDocRef, postObj, { merge: true });\n  } catch {\n    alert(\"something went wrong... please try again later!\");\n  }\n};\n\n// *** remember to set modifieddate\nexport const updatePost = async (postId, postObj) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await updateDoc(postDoc, postObj);\n};\n\nexport const deletePost = async (postId) => {\n  console.log(postId);\n  const postDoc = doc(db, \"posts\", postId);\n  await deleteDoc(postDoc);\n};\n"],"mappings":"+bAAA,OAASA,EAAE,KAAQ,mBAAmB,CACtC,OACEC,UAAU,CACVC,OAAO,CACPC,SAAS,CACTC,GAAG,CACHC,SAAS,CACTC,MAAM,CACNC,KAAK,CACLC,KAAK,KACA,oBAAoB,CAE3B,GAAMC,mBAAkB,CAAGR,UAAU,CAACD,EAAE,CAAE,OAAO,CAAC,CAElD,MAAO,IAAMU,YAAW,4FAAG,sLACER,QAAO,CAACO,kBAAkB,CAAC,QAAhDE,YAAY,eAEZC,SAAS,CAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAC,SAACV,GAAG,wCACvCA,GAAG,CAACW,IAAI,EAAE,MACbC,EAAE,CAAEZ,GAAG,CAACY,EAAE,IACV,CAAC,iCACIJ,SAAS,wDACjB,kBARYF,YAAW,0CAQvB,CAED,MAAO,IAAMO,WAAU,6FAAG,kBAAOC,KAAK,gKAC9BC,YAAY,CAAGZ,KAAK,CAACE,kBAAkB,CAAED,KAAK,CAAC,OAAO,CAAE,IAAI,CAAEU,KAAK,CAAC,CAAC,wBAChDhB,QAAO,CAACiB,YAAY,CAAC,QAA1CR,YAAY,gBACZC,SAAS,CAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAC,SAACV,GAAG,wCACvCA,GAAG,CAACW,IAAI,EAAE,MACbC,EAAE,CAAEZ,GAAG,CAACY,EAAE,IACV,CAAC,kCACIJ,SAAS,0DACjB,kBARYK,WAAU,6CAQtB,CAED,MAAO,IAAMG,cAAa,6FAAG,kBAAOC,MAAM,8JAClCC,UAAU,CAAGf,KAAK,CAACE,kBAAkB,CAAED,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAEa,MAAM,CAAC,CAAC,wBAChDnB,QAAO,CAACoB,UAAU,CAAC,QAAxCX,YAAY,gBACZC,SAAS,CAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAC,SAACV,GAAG,wCACvCA,GAAG,CAACW,IAAI,EAAE,MACbC,EAAE,CAAEZ,GAAG,CAACY,EAAE,IACV,CAAC,kCAEIJ,SAAS,CAAC,CAAC,CAAC,0DACpB,kBATYQ,cAAa,8CASzB,CAED,MAAO,IAAMG,QAAO,6FAAG,kBAAOC,OAAO,mIAC7BC,MAAM,CAAGrB,GAAG,CAACK,kBAAkB,CAAC,CACtCe,OAAO,CAACE,MAAM,CAAGD,MAAM,CAACT,EAAE,CAAC,uBACrBV,OAAM,CAACmB,MAAM,CAAED,OAAO,CAAC,yDAE9B,kBALYD,QAAO,8CAKnB,CAED,MAAO,IAAMI,eAAc,6FAAG,kBAAOH,OAAO,0JAElCI,YAAY,CAAGxB,GAAG,CAACJ,EAAE,CAAE,OAAO,CAAEwB,OAAO,CAACE,MAAM,CAAC,wBAC/CpB,OAAM,CAACsB,YAAY,CAAEJ,OAAO,CAAE,CAAEK,KAAK,CAAE,IAAK,CAAC,CAAC,0FAEpDC,KAAK,CAAC,iDAAiD,CAAC,CAAC,qEAE5D,kBAPYH,eAAc,8CAO1B,CAED;AACA,MAAO,IAAMI,WAAU,6FAAG,kBAAOV,MAAM,CAAEG,OAAO,oIACxCQ,OAAO,CAAG5B,GAAG,CAACJ,EAAE,CAAE,OAAO,CAAEqB,MAAM,CAAC,wBAClClB,UAAS,CAAC6B,OAAO,CAAER,OAAO,CAAC,yDAClC,kBAHYO,WAAU,kDAGtB,CAED,MAAO,IAAME,WAAU,6FAAG,kBAAOZ,MAAM,oIACrCa,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC,CACbW,OAAO,CAAG5B,GAAG,CAACJ,EAAE,CAAE,OAAO,CAAEqB,MAAM,CAAC,wBAClChB,UAAS,CAAC2B,OAAO,CAAC,yDACzB,kBAJYC,WAAU,8CAItB"},"metadata":{},"sourceType":"module","externalDependencies":[]}