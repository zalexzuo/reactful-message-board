{"ast":null,"code":"var _jsxFileName = \"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/MyPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMyPosts } from \"../lib/firebase-api\";\nimport PostList from \"../components/post/PostList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hook/useHttp\";\nimport PleaseLogin from \"../components/UI/PleaseLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPost = () => {\n  _s();\n  const isLogin = useSelector(state => state.isLogin);\n  const location = useLocation().pathname;\n  console.log(location);\n  const {\n    sendRequest,\n    status,\n    data: myPosts,\n    error\n  } = useHttp(getMyPosts, true);\n  useEffect(() => {\n    if (isLogin) {\n      const userEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      sendRequest(userEmail);\n    }\n  }, [sendRequest]);\n  if (status === \"pending\" && isLogin == true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === \"completed\" && (!myPosts || myPosts.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Post Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(PostList, {\n      posts: myPosts,\n      btnText: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PleaseLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPost, \"YBfsSeAA/j21U19dVhgYiFsKZRU=\", false, function () {\n  return [useSelector, useLocation, useHttp];\n});\n_c = MyPost;\nexport default MyPost;\nvar _c;\n$RefreshReg$(_c, \"MyPost\");","map":{"version":3,"names":["React","useEffect","useSelector","useLocation","getMyPosts","PostList","LoadingSpinner","useHttp","PleaseLogin","MyPost","isLogin","state","location","pathname","console","log","sendRequest","status","data","myPosts","error","userEmail","JSON","parse","localStorage","getItem","email","length"],"sources":["/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/MyPost.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { getMyPosts } from \"../lib/firebase-api\";\nimport PostList from \"../components/post/PostList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hook/useHttp\";\nimport PleaseLogin from \"../components/UI/PleaseLogin\";\n\nconst MyPost = () => {\n  const isLogin = useSelector((state) => state.isLogin);\n  const location = useLocation().pathname;\n  console.log(location);\n\n  const {\n    sendRequest,\n    status,\n    data: myPosts,\n    error,\n  } = useHttp(getMyPosts, true);\n\n  useEffect(() => {\n    if (isLogin) {\n      const userEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      sendRequest(userEmail);\n    }\n  }, [sendRequest]);\n\n  if (status === \"pending\" && isLogin == true) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!myPosts || myPosts.length === 0)) {\n    return <h1>No Post Found!</h1>;\n  }\n\n  return (\n    <React.Fragment>\n      {isLogin ? (\n        <PostList posts={myPosts} btnText={\"Edit\"} />\n      ) : (\n        <PleaseLogin />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MyPost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,WAAW,MAAM,8BAA8B;AAAC;AAEvD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAMC,OAAO,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAME,QAAQ,GAAGT,WAAW,EAAE,CAACU,QAAQ;EACvCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EAErB,MAAM;IACJI,WAAW;IACXC,MAAM;IACNC,IAAI,EAAEC,OAAO;IACbC;EACF,CAAC,GAAGb,OAAO,CAACH,UAAU,EAAE,IAAI,CAAC;EAE7BH,SAAS,CAAC,MAAM;IACd,IAAIS,OAAO,EAAE;MACX,MAAMW,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACC,KAAK;MACpEV,WAAW,CAACK,SAAS,CAAC;IACxB;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,IAAIC,MAAM,KAAK,SAAS,IAAIP,OAAO,IAAI,IAAI,EAAE;IAC3C,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACd;EAEV;EAEA,IAAIU,KAAK,EAAE;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAkB;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EACpD;EAEA,IAAIH,MAAM,KAAK,WAAW,KAAK,CAACE,OAAO,IAAIA,OAAO,CAACQ,MAAM,KAAK,CAAC,CAAC,EAAE;IAChE,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;EAChC;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,UACZjB,OAAO,gBACN,QAAC,QAAQ;MAAC,KAAK,EAAES,OAAQ;MAAC,OAAO,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,gBAE7C,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA;EACb;IAAA;IAAA;IAAA;EAAA,QACc;AAErB,CAAC;AAAC,GA5CIV,MAAM;EAAA,QACMP,WAAW,EACVC,WAAW,EAQxBI,OAAO;AAAA;AAAA,KAVPE,MAAM;AA8CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}