{"ast":null,"code":"import { db } from \"./firebase-config\";\nimport { collection, getDocs, updateDoc, doc, deleteDoc, setDoc, query, where, exists } from \"firebase/firestore\";\nconst postsCollectionRef = collection(db, \"posts\");\nexport const getAllPosts = async () => {\n  const responseData = await getDocs(postsCollectionRef);\n  const dataArray = responseData.docs.map(doc => ({\n    ...doc.data(),\n    id: doc.id\n  }));\n  return dataArray;\n};\nexport const getMyPosts = async email => {\n  const myPostsQuery = query(postsCollectionRef, where(\"email\", \"==\", email));\n  const responseData = await getDocs(myPostsQuery);\n  const dataArray = responseData.docs.map(doc => ({\n    ...doc.data(),\n    id: doc.id\n  }));\n  return dataArray;\n};\nexport const getSinglePost = async postId => {\n  const singlePost = await getDocs(postsCollectionRef, postId);\n  if (singlePost.exists()) {\n    console.log(singlePost.data());\n  } else {\n    console.log(\"No such socfdas\");\n  }\n};\nexport const addPost = async postObj => {\n  const docRef = doc(postsCollectionRef);\n  postObj.postid = docRef.id;\n  await setDoc(docRef, postObj);\n  //await addDoc(postsCollectionRef, postObj);\n};\n\n// *** remember to set modifieddate\nexport const updatePost = async (postId, postObj) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await updateDoc(postDoc, postObj);\n};\nexport const deletePost = async postId => {\n  const postDoc = doc(db, \"posts\", postId);\n  await deleteDoc(postDoc);\n};","map":{"version":3,"names":["db","collection","getDocs","updateDoc","doc","deleteDoc","setDoc","query","where","exists","postsCollectionRef","getAllPosts","responseData","dataArray","docs","map","data","id","getMyPosts","email","myPostsQuery","getSinglePost","postId","singlePost","console","log","addPost","postObj","docRef","postid","updatePost","postDoc","deletePost"],"sources":["/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-api.js"],"sourcesContent":["import { db } from \"./firebase-config\";\nimport {\n  collection,\n  getDocs,\n  updateDoc,\n  doc,\n  deleteDoc,\n  setDoc,\n  query,\n  where,\n  exists,\n} from \"firebase/firestore\";\n\nconst postsCollectionRef = collection(db, \"posts\");\n\nexport const getAllPosts = async () => {\n  const responseData = await getDocs(postsCollectionRef);\n\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n  return dataArray;\n};\n\nexport const getMyPosts = async (email) => {\n  const myPostsQuery = query(postsCollectionRef, where(\"email\", \"==\", email));\n  const responseData = await getDocs(myPostsQuery);\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n  return dataArray;\n};\n\nexport const getSinglePost = async (postId) => {\n  const singlePost = await getDocs(postsCollectionRef, postId);\n  if (singlePost.exists()) {\n    console.log(singlePost.data());\n  } else {\n    console.log(\"No such socfdas\");\n  }\n};\n\nexport const addPost = async (postObj) => {\n  const docRef = doc(postsCollectionRef);\n  postObj.postid = docRef.id;\n  await setDoc(docRef, postObj);\n  //await addDoc(postsCollectionRef, postObj);\n};\n\n// *** remember to set modifieddate\nexport const updatePost = async (postId, postObj) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await updateDoc(postDoc, postObj);\n};\n\nexport const deletePost = async (postId) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await deleteDoc(postDoc);\n};\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,mBAAmB;AACtC,SACEC,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,KAAK,EACLC,MAAM,QACD,oBAAoB;AAE3B,MAAMC,kBAAkB,GAAGT,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;AAElD,OAAO,MAAMW,WAAW,GAAG,YAAY;EACrC,MAAMC,YAAY,GAAG,MAAMV,OAAO,CAACQ,kBAAkB,CAAC;EAEtD,MAAMG,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAEX,GAAG,KAAM;IAChD,GAAGA,GAAG,CAACY,IAAI,EAAE;IACbC,EAAE,EAAEb,GAAG,CAACa;EACV,CAAC,CAAC,CAAC;EACH,OAAOJ,SAAS;AAClB,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,MAAMC,YAAY,GAAGb,KAAK,CAACG,kBAAkB,EAAEF,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEW,KAAK,CAAC,CAAC;EAC3E,MAAMP,YAAY,GAAG,MAAMV,OAAO,CAACkB,YAAY,CAAC;EAChD,MAAMP,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAEX,GAAG,KAAM;IAChD,GAAGA,GAAG,CAACY,IAAI,EAAE;IACbC,EAAE,EAAEb,GAAG,CAACa;EACV,CAAC,CAAC,CAAC;EACH,OAAOJ,SAAS;AAClB,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,MAAMC,UAAU,GAAG,MAAMrB,OAAO,CAACQ,kBAAkB,EAAEY,MAAM,CAAC;EAC5D,IAAIC,UAAU,CAACd,MAAM,EAAE,EAAE;IACvBe,OAAO,CAACC,GAAG,CAACF,UAAU,CAACP,IAAI,EAAE,CAAC;EAChC,CAAC,MAAM;IACLQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,OAAO,IAAK;EACxC,MAAMC,MAAM,GAAGxB,GAAG,CAACM,kBAAkB,CAAC;EACtCiB,OAAO,CAACE,MAAM,GAAGD,MAAM,CAACX,EAAE;EAC1B,MAAMX,MAAM,CAACsB,MAAM,EAAED,OAAO,CAAC;EAC7B;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,OAAOR,MAAM,EAAEK,OAAO,KAAK;EACnD,MAAMI,OAAO,GAAG3B,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEsB,MAAM,CAAC;EACxC,MAAMnB,SAAS,CAAC4B,OAAO,EAAEJ,OAAO,CAAC;AACnC,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOV,MAAM,IAAK;EAC1C,MAAMS,OAAO,GAAG3B,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEsB,MAAM,CAAC;EACxC,MAAMjB,SAAS,CAAC0B,OAAO,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}