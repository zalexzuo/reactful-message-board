{"ast":null,"code":"import { db } from \"./firebase-config\";\nimport { collection, getDocs, updateDoc, doc, deleteDoc, setDoc, query, where } from \"firebase/firestore\";\nconst postsCollectionRef = collection(db, \"posts\");\nexport const getAllPosts = async () => {\n  const responseData = await getDocs(postsCollectionRef);\n  const dataArray = responseData.docs.map(doc => ({\n    ...doc.data(),\n    id: doc.id\n  }));\n  return dataArray;\n};\nexport const getMyPosts = async email => {\n  const myPostsQuery = query(postsCollectionRef, where(\"email\", \"==\", email));\n  const responseData = await getDocs(myPostsQuery);\n  const dataArray = responseData.docs.map(doc => ({\n    ...doc.data(),\n    id: doc.id\n  }));\n  return dataArray;\n};\nexport const getSinglePost = async postId => {\n  const postsQuery = query(postsCollectionRef, where(\"postid\", \"==\", postId));\n  const responseData = await getDocs(postsQuery);\n  const dataArray = responseData.docs.map(doc => ({\n    ...doc.data(),\n    id: doc.id\n  }));\n  return dataArray[0];\n};\nexport const addPost = async postObj => {\n  const docRef = doc(postsCollectionRef);\n  postObj.postid = docRef.id;\n  await setDoc(docRef, postObj);\n  //await addDoc(postsCollectionRef, postObj);\n};\n\nexport const editSinglePost = async postObj => {\n  const docRef = postsCollectionRef.doc(postObj.postid).update(postObj);\n};\n\n// *** remember to set modifieddate\nexport const updatePost = async (postId, postObj) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await updateDoc(postDoc, postObj);\n};\nexport const deletePost = async postId => {\n  const postDoc = doc(db, \"posts\", postId);\n  await deleteDoc(postDoc);\n};","map":{"version":3,"names":["db","collection","getDocs","updateDoc","doc","deleteDoc","setDoc","query","where","postsCollectionRef","getAllPosts","responseData","dataArray","docs","map","data","id","getMyPosts","email","myPostsQuery","getSinglePost","postId","postsQuery","addPost","postObj","docRef","postid","editSinglePost","update","updatePost","postDoc","deletePost"],"sources":["/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-api.js"],"sourcesContent":["import { db } from \"./firebase-config\";\nimport {\n  collection,\n  getDocs,\n  updateDoc,\n  doc,\n  deleteDoc,\n  setDoc,\n  query,\n  where,\n} from \"firebase/firestore\";\n\nconst postsCollectionRef = collection(db, \"posts\");\n\nexport const getAllPosts = async () => {\n  const responseData = await getDocs(postsCollectionRef);\n\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n  return dataArray;\n};\n\nexport const getMyPosts = async (email) => {\n  const myPostsQuery = query(postsCollectionRef, where(\"email\", \"==\", email));\n  const responseData = await getDocs(myPostsQuery);\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n  return dataArray;\n};\n\nexport const getSinglePost = async (postId) => {\n  const postsQuery = query(postsCollectionRef, where(\"postid\", \"==\", postId));\n  const responseData = await getDocs(postsQuery);\n  const dataArray = responseData.docs.map((doc) => ({\n    ...doc.data(),\n    id: doc.id,\n  }));\n\n  return dataArray[0];\n};\n\nexport const addPost = async (postObj) => {\n  const docRef = doc(postsCollectionRef);\n  postObj.postid = docRef.id;\n  await setDoc(docRef, postObj);\n  //await addDoc(postsCollectionRef, postObj);\n};\n\nexport const editSinglePost = async (postObj) => {\n  const docRef = postsCollectionRef.doc(postObj.postid).update(postObj);\n};\n\n// *** remember to set modifieddate\nexport const updatePost = async (postId, postObj) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await updateDoc(postDoc, postObj);\n};\n\nexport const deletePost = async (postId) => {\n  const postDoc = doc(db, \"posts\", postId);\n  await deleteDoc(postDoc);\n};\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,mBAAmB;AACtC,SACEC,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,KAAK,QACA,oBAAoB;AAE3B,MAAMC,kBAAkB,GAAGR,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;AAElD,OAAO,MAAMU,WAAW,GAAG,YAAY;EACrC,MAAMC,YAAY,GAAG,MAAMT,OAAO,CAACO,kBAAkB,CAAC;EAEtD,MAAMG,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAEV,GAAG,KAAM;IAChD,GAAGA,GAAG,CAACW,IAAI,EAAE;IACbC,EAAE,EAAEZ,GAAG,CAACY;EACV,CAAC,CAAC,CAAC;EACH,OAAOJ,SAAS;AAClB,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,MAAMC,YAAY,GAAGZ,KAAK,CAACE,kBAAkB,EAAED,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEU,KAAK,CAAC,CAAC;EAC3E,MAAMP,YAAY,GAAG,MAAMT,OAAO,CAACiB,YAAY,CAAC;EAChD,MAAMP,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAEV,GAAG,KAAM;IAChD,GAAGA,GAAG,CAACW,IAAI,EAAE;IACbC,EAAE,EAAEZ,GAAG,CAACY;EACV,CAAC,CAAC,CAAC;EACH,OAAOJ,SAAS;AAClB,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,MAAMC,UAAU,GAAGf,KAAK,CAACE,kBAAkB,EAAED,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEa,MAAM,CAAC,CAAC;EAC3E,MAAMV,YAAY,GAAG,MAAMT,OAAO,CAACoB,UAAU,CAAC;EAC9C,MAAMV,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAAEV,GAAG,KAAM;IAChD,GAAGA,GAAG,CAACW,IAAI,EAAE;IACbC,EAAE,EAAEZ,GAAG,CAACY;EACV,CAAC,CAAC,CAAC;EAEH,OAAOJ,SAAS,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,MAAMW,OAAO,GAAG,MAAOC,OAAO,IAAK;EACxC,MAAMC,MAAM,GAAGrB,GAAG,CAACK,kBAAkB,CAAC;EACtCe,OAAO,CAACE,MAAM,GAAGD,MAAM,CAACT,EAAE;EAC1B,MAAMV,MAAM,CAACmB,MAAM,EAAED,OAAO,CAAC;EAC7B;AACF,CAAC;;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOH,OAAO,IAAK;EAC/C,MAAMC,MAAM,GAAGhB,kBAAkB,CAACL,GAAG,CAACoB,OAAO,CAACE,MAAM,CAAC,CAACE,MAAM,CAACJ,OAAO,CAAC;AACvE,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,OAAOR,MAAM,EAAEG,OAAO,KAAK;EACnD,MAAMM,OAAO,GAAG1B,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEqB,MAAM,CAAC;EACxC,MAAMlB,SAAS,CAAC2B,OAAO,EAAEN,OAAO,CAAC;AACnC,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOV,MAAM,IAAK;EAC1C,MAAMS,OAAO,GAAG1B,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEqB,MAAM,CAAC;EACxC,MAAMhB,SAAS,CAACyB,OAAO,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}