{"ast":null,"code":"var _jsxFileName = \"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/AddForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PostDetail from \"../../pages/PostDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddForm = props => {\n  _s();\n  const [postObj, setPostObj] = useState({\n    username: \"\",\n    email: \"\",\n    title: \"\",\n    content: \"\",\n    modifieddate: \"\",\n    picture: \"\"\n  });\n  const post = {};\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  console.log(userInfo);\n  const formSubmitHandler = (e, props) => {\n    e.preventDefault();\n    const dateInfo = new Date();\n    const modifiedDate = `${dateInfo.getFullYear()}-${dateInfo.getMonth()}-${dateInfo.getDate()}`;\n    console.log(modifiedDate);\n    setPostObj(preState => {\n      const insertInfo = {\n        ...preState,\n        username: userInfo.name,\n        email: userInfo.email,\n        modifieddate: modifiedDate,\n        picture: userInfo.picture\n      };\n    });\n    if (!postObj.title == \"\" && !postObj.content == \"\") {\n      postObj.username = props.addPostHandler(postObj);\n    } else {\n      window.alert(\"Title and content cannot be empty!\");\n    }\n  };\n  const testHandler = () => {\n    console.log(postObj);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: postObj.title,\n          onChange: e => {\n            setPostObj({\n              title: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: postObj.content,\n          onChange: e => {\n            setPostObj({\n              content: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: formSubmitHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: testHandler,\n          children: \"TEST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddForm, \"y5eCN0dzqJOULoPesJZGNJGYZJM=\");\n_c = AddForm;\nexport default AddForm;\nvar _c;\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"names":["React","useState","PostDetail","AddForm","props","postObj","setPostObj","username","email","title","content","modifieddate","picture","post","userInfo","JSON","parse","localStorage","getItem","console","log","formSubmitHandler","e","preventDefault","dateInfo","Date","modifiedDate","getFullYear","getMonth","getDate","preState","insertInfo","name","addPostHandler","window","alert","testHandler","target","value"],"sources":["/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/AddForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PostDetail from \"../../pages/PostDetail\";\n\nconst AddForm = (props) => {\n  const [postObj, setPostObj] = useState({\n    username: \"\",\n    email: \"\",\n    title: \"\",\n    content: \"\",\n    modifieddate: \"\",\n    picture: \"\",\n  });\n\n  const post = {};\n\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  console.log(userInfo);\n\n  const formSubmitHandler = (e, props) => {\n    e.preventDefault();\n\n    const dateInfo = new Date();\n    const modifiedDate = `${dateInfo.getFullYear()}-${dateInfo.getMonth()}-${dateInfo.getDate()}`;\n    console.log(modifiedDate);\n\n    setPostObj((preState) => {\n      const insertInfo = {\n        ...preState,\n        username: userInfo.name,\n        email: userInfo.email,\n        modifieddate: modifiedDate,\n        picture: userInfo.picture,\n      };\n    });\n\n    if (!postObj.title == \"\" && !postObj.content == \"\") {\n      postObj.username = props.addPostHandler(postObj);\n    } else {\n      window.alert(\"Title and content cannot be empty!\");\n    }\n  };\n\n  const testHandler = () => {\n    console.log(postObj);\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <form>\n          <label>Title:</label>\n          <input\n            type=\"text\"\n            value={postObj.title}\n            onChange={(e) => {\n              setPostObj({ title: e.target.value });\n            }}\n          ></input>\n          <label>Content:</label>\n          <textarea\n            value={postObj.content}\n            onChange={(e) => {\n              setPostObj({ content: e.target.value });\n            }}\n          ></textarea>\n          <button onClick={formSubmitHandler}>Submit</button>\n          <button onClick={testHandler}>TEST</button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AddForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}