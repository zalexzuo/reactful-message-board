{"ast":null,"code":"var _jsxFileName = \"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport useHttp from \"../hook/useHttp\";\nimport { getSinglePost } from \"../lib/firebase-api\";\nimport PleaseLogin from \"../components/UI/PleaseLogin\";\nimport EditForm from \"../components/post/EditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const isLogin = useSelector(state => state.isLogin);\n  const {\n    sendEditRequest,\n    editStatus\n  } = useHttp();\n  const params = useParams();\n  const {\n    postid\n  } = params;\n  const navigate = useNavigate();\n  var obj;\n  const responseData = useCallback(async () => {\n    try {\n      const data = await getSinglePost(postid).then(data => {\n        obj = data;\n        //console.log(data);\n      });\n    } catch {\n      window.alert(\"GET DATA FAILD!\");\n    }\n  });\n  responseData();\n  console.log(obj);\n  useEffect(() => {\n    if (editStatus === \"completed\") {\n      window.alert(\"Post Edited!\");\n      navigate(\"/mypost\", {\n        replace: true\n      });\n    }\n  });\n  const editPostHandler = postObj => {\n    sendEditRequest(postObj);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(EditForm, {\n      addPostHandler: editPostHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PleaseLogin, {\n      pageName: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"XMDAtVWgm0VBXajqu+CLGwtPlRs=\", false, function () {\n  return [useSelector, useHttp, useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","useParams","useSelector","useHttp","getSinglePost","PleaseLogin","EditForm","EditPost","isLogin","state","sendEditRequest","editStatus","params","postid","navigate","obj","responseData","data","then","window","alert","console","log","replace","editPostHandler","postObj"],"sources":["/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/EditPost.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport useHttp from \"../hook/useHttp\";\nimport { getSinglePost } from \"../lib/firebase-api\";\nimport PleaseLogin from \"../components/UI/PleaseLogin\";\nimport EditForm from \"../components/post/EditForm\";\n\nconst EditPost = () => {\n  const isLogin = useSelector((state) => state.isLogin);\n\n  const { sendEditRequest, editStatus } = useHttp();\n  const params = useParams();\n  const { postid } = params;\n  const navigate = useNavigate();\n\n  var obj;\n\n  const responseData = useCallback(async () => {\n    try {\n      const data = await getSinglePost(postid).then((data) => {\n        obj = data;\n        //console.log(data);\n      });\n    } catch {\n      window.alert(\"GET DATA FAILD!\");\n    }\n  });\n\n  responseData();\n  console.log(obj);\n\n  useEffect(() => {\n    if (editStatus === \"completed\") {\n      window.alert(\"Post Edited!\");\n      navigate(\"/mypost\", { replace: true });\n    }\n  });\n\n  const editPostHandler = (postObj) => {\n    sendEditRequest(postObj);\n  };\n\n  return (\n    <React.Fragment>\n      {isLogin ? (\n        <EditForm addPostHandler={editPostHandler} />\n      ) : (\n        <PleaseLogin pageName={\"Edit Post\"} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default EditPost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,QAAQ,MAAM,6BAA6B;AAAC;AAEnD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,OAAO,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EAErD,MAAM;IAAEE,eAAe;IAAEC;EAAW,CAAC,GAAGR,OAAO,EAAE;EACjD,MAAMS,MAAM,GAAGX,SAAS,EAAE;EAC1B,MAAM;IAAEY;EAAO,CAAC,GAAGD,MAAM;EACzB,MAAME,QAAQ,GAAGd,WAAW,EAAE;EAE9B,IAAIe,GAAG;EAEP,MAAMC,YAAY,GAAGjB,WAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMkB,IAAI,GAAG,MAAMb,aAAa,CAACS,MAAM,CAAC,CAACK,IAAI,CAAED,IAAI,IAAK;QACtDF,GAAG,GAAGE,IAAI;QACV;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,MAAM;MACNE,MAAM,CAACC,KAAK,CAAC,iBAAiB,CAAC;IACjC;EACF,CAAC,CAAC;EAEFJ,YAAY,EAAE;EACdK,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EAEhBlB,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,KAAK,WAAW,EAAE;MAC9BQ,MAAM,CAACC,KAAK,CAAC,cAAc,CAAC;MAC5BN,QAAQ,CAAC,SAAS,EAAE;QAAES,OAAO,EAAE;MAAK,CAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAIC,OAAO,IAAK;IACnCf,eAAe,CAACe,OAAO,CAAC;EAC1B,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,UACZjB,OAAO,gBACN,QAAC,QAAQ;MAAC,cAAc,EAAEgB;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,gBAE7C,QAAC,WAAW;MAAC,QAAQ,EAAE;IAAY;MAAA;MAAA;MAAA;IAAA;EACpC;IAAA;IAAA;IAAA;EAAA,QACc;AAErB,CAAC;AAAC,GA5CIjB,QAAQ;EAAA,QACIL,WAAW,EAEaC,OAAO,EAChCF,SAAS,EAEPD,WAAW;AAAA;AAAA,KANxBO,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}