[{"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/index.js":"1","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/App.js":"2","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/layout/Layout.js":"3","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/layout/Navigation.js":"4","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/AddPost.js":"5","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/AllPost.js":"6","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/MyPost.js":"7","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/PostList.js":"8","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/PostItem.js":"9","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/store/index.js":"10","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/store/LoginSlice.js":"11","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/PostDetail.js":"12","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/googleLogin.js":"13","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-api.js":"14","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-config.js":"15","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/UI/LoadingSpinner.js":"16","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/hook/useHttp.js":"17","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/AddForm.js":"18","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/UI/PleaseLogin.js":"19","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/EditPost.js":"20","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/PostForm.js":"21","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/EditForm.js":"22","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/layout/Footer.js":"23","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/store/ThemeSlice.js":"24"},{"size":391,"mtime":1670249711267,"results":"25","hashOfConfig":"26"},{"size":889,"mtime":1669912601704,"results":"27","hashOfConfig":"26"},{"size":634,"mtime":1670251056682,"results":"28","hashOfConfig":"26"},{"size":3989,"mtime":1670253152015,"results":"29","hashOfConfig":"26"},{"size":948,"mtime":1670152657228,"results":"30","hashOfConfig":"26"},{"size":898,"mtime":1670248611929,"results":"31","hashOfConfig":"26"},{"size":1247,"mtime":1670152646035,"results":"32","hashOfConfig":"26"},{"size":1707,"mtime":1670247372400,"results":"33","hashOfConfig":"26"},{"size":1775,"mtime":1670253901883,"results":"34","hashOfConfig":"26"},{"size":480,"mtime":1670159900245,"results":"35","hashOfConfig":"26"},{"size":465,"mtime":1670146204718,"results":"36","hashOfConfig":"26"},{"size":278,"mtime":1669136432859,"results":"37","hashOfConfig":"26"},{"size":887,"mtime":1670251847470,"results":"38","hashOfConfig":"26"},{"size":1814,"mtime":1670054592873,"results":"39","hashOfConfig":"26"},{"size":688,"mtime":1670248363926,"results":"40","hashOfConfig":"26"},{"size":167,"mtime":1669551886396,"results":"41","hashOfConfig":"26"},{"size":1219,"mtime":1669560663074,"results":"42","hashOfConfig":"26"},{"size":937,"mtime":1669908593846,"results":"43","hashOfConfig":"26"},{"size":369,"mtime":1669651983031,"results":"44","hashOfConfig":"26"},{"size":1569,"mtime":1670152671785,"results":"45","hashOfConfig":"26"},{"size":2385,"mtime":1669910178018,"results":"46","hashOfConfig":"26"},{"size":997,"mtime":1669905326330,"results":"47","hashOfConfig":"26"},{"size":185,"mtime":1669912397187,"results":"48","hashOfConfig":"26"},{"size":656,"mtime":1670146734696,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ykucpq",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"56"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"56"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/index.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/App.js",[],[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/layout/Layout.js",["134"],[],"import React from \"react\";\nimport Navigation from \"./Navigation\";\n\nimport styles from \"./Layout.module.scss\";\n\nconst Layout = (props) => {\n  return (\n    <React.Fragment>\n      <Navigation />\n      <main className={styles.main}>{props.children}</main>\n      <div className={styles.gitLogo}>\n        <a\n          href=\"https://github.com/zalexzuo/reactful-message-board\"\n          target=\"_blank\"\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/25/25231.png\"\n            alt=\"Github\"\n            width=\"50px\"\n          />\n        </a>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n",[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/layout/Navigation.js",["135","136","137","138","139","140","141","142","143"],[],"import React, { useEffect } from \"react\";\nimport { NavLink, Link, useNavigate, useLocation } from \"react-router-dom\";\n\nimport styles from \"./Navigation.module.scss\";\nimport logo from \"../../images/logo.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GoogleLogin } from \"../../lib/googleLogin\";\nimport { LoginActions } from \"../../store/LoginSlice\";\n\nconst Navigation = () => {\n  const isLogin = useSelector((state) => state.login.isLogin);\n  // console.log(\"login: \" + isLogin);\n\n  // const themeDark = useSelector((state) => state.theme.theme);\n  // console.log(\"theme: \" + themeDark);\n\n  const dispatch = useDispatch();\n\n  // login and logout redirecting config\n  const navigate = useNavigate();\n  const location = useLocation();\n  const loginUrl = window.location.hostname;\n  // + location.pathname\n\n  // const loginHandler = () => {\n  //   dispatch(LoginActions.userLogin());\n  // };\n\n  const logoutHandler = () => {\n    const confirmLogout = window.confirm(\"Are you sure you want to log out?\");\n\n    if (confirmLogout) {\n      dispatch(LoginActions.userLogout());\n      localStorage.removeItem(\"userInfo\");\n      navigate(\"/allpost\", { replace: true });\n      window.location.href = \"https://reactful-message-board.netlify.app\";\n    }\n  };\n\n  // get localStorage for log\n  // const getUserInfo = () => {\n  //   return localStorage.getItem(\"userInfo\");\n  // };\n\n  const themeToggleHandler = () => {\n    if (localStorage.getItem(\"theme\") == \"true\") {\n      localStorage.setItem(\"theme\", false);\n      document.body.style.backgroundColor = \"#FFF\";\n    } else if (localStorage.getItem(\"theme\") == \"false\") {\n      localStorage.setItem(\"theme\", true);\n      document.body.style.backgroundColor = \"#1e272e\";\n    } else {\n      localStorage.setItem(\"theme\", false);\n      document.body.style.backgroundColor = \"#FFF\";\n    }\n  };\n\n  const initialThemeFunction = () => {\n    if (localStorage.getItem(\"theme\") == \"true\") {\n      document.body.style.backgroundColor = \"#1e272e\";\n    } else if (localStorage.getItem(\"theme\") == \"false\") {\n      document.body.style.backgroundColor = \"#FFF\";\n    } else {\n      localStorage.setItem(\"theme\", false);\n    }\n  };\n\n  useEffect(() => {\n    if (isLogin == false || isLogin == null || isLogin == undefined) {\n      GoogleLogin(loginUrl);\n    }\n\n    initialThemeFunction();\n  }, [isLogin, GoogleLogin]);\n\n  const getLog = () => {\n    // console.log(\"current theme: \" + localStorage.getItem(\"theme\"));\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.logo}>\n        <Link to=\"/allpost\">\n          <img src={logo} alt=\"ReactFul\" />\n        </Link>\n      </div>\n      <nav className={styles.nav}>\n        <ul>\n          <li>\n            <NavLink\n              to=\"/allpost\"\n              className={(navData) =>\n                navData.isActive ? styles.active : styles.link\n              }\n            >\n              All Post\n            </NavLink>\n          </li>\n          {isLogin ? (\n            <li>\n              <NavLink\n                to=\"/addpost\"\n                className={(navData) =>\n                  navData.isActive ? styles.active : styles.link\n                }\n              >\n                Add Post\n              </NavLink>\n            </li>\n          ) : (\n            \"\"\n          )}\n          {isLogin ? (\n            <li>\n              <NavLink\n                to=\"/mypost\"\n                className={(navData) =>\n                  navData.isActive ? styles.active : styles.link\n                }\n              >\n                My Post\n              </NavLink>\n            </li>\n          ) : (\n            \"\"\n          )}\n          {isLogin ? (\n            <button onClick={logoutHandler}>Logout</button>\n          ) : (\n            <div id=\"loginBtn\"></div>\n          )}\n          <button onClick={themeToggleHandler}>Theme</button>\n          {/* <button onClick={getLog}>TEST</button> */}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navigation;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/AddPost.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/AllPost.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/MyPost.js",["144","145"],[],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getMyPosts } from \"../lib/firebase-api\";\nimport PostList from \"../components/post/PostList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hook/useHttp\";\nimport PleaseLogin from \"../components/UI/PleaseLogin\";\n\nconst MyPost = () => {\n  const isLogin = useSelector((state) => state.login.isLogin);\n\n  const {\n    sendRequest,\n    status,\n    data: myPosts,\n    error,\n  } = useHttp(getMyPosts, true);\n\n  useEffect(() => {\n    if (isLogin) {\n      const userEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      sendRequest(userEmail);\n    }\n  }, [sendRequest]);\n\n  if (status === \"pending\" && isLogin == true) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!myPosts || myPosts.length === 0)) {\n    return <h1>No Post Found!</h1>;\n  }\n\n  return (\n    <React.Fragment>\n      {isLogin ? (\n        <PostList posts={myPosts} btnText={\"Edit\"} />\n      ) : (\n        <PleaseLogin />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MyPost;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/PostList.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/PostItem.js",["146","147"],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/store/index.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/store/LoginSlice.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/PostDetail.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/googleLogin.js",["148"],[],"import jwt_decode from \"jwt-decode\";\n\nexport const GoogleLogin = (loginUrl) => {\n  // tihs line will solve google is not define problem\n  const google = window.google;\n\n  const handleCallbackResponse = (response) => {\n    // console.log(\"Encoded JWT ID token: \" + response.credential);\n    var userObject = jwt_decode(response.credential);\n    // console.log(userObject);\n\n    // localStorage can only store String\n    localStorage.setItem(\"userInfo\", JSON.stringify(userObject));\n\n    window.location.replace(loginUrl);\n  };\n\n  google.accounts.id.initialize({\n    /* global google */\n    client_id: process.env.REACT_APP_GOOGLE_CLIENT_KEY,\n    referrerPolicy: {\n      policy: \"strict-origin-when-cross-origin\",\n    },\n    callback: handleCallbackResponse,\n  });\n\n  google.accounts.id.renderButton(document.getElementById(\"loginBtn\"), {\n    theme: \"outline\",\n    size: \"large\",\n  });\n};\n",[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-api.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/lib/firebase-config.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/UI/LoadingSpinner.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/hook/useHttp.js",["149"],[],"import { useReducer, useCallback } from \"react\";\n\nconst httpReducer = (state, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return {\n        data: null,\n        error: null,\n        status: \"pending\",\n      };\n    case \"SUCCESS\":\n      return {\n        data: action.responseData,\n        error: null,\n        status: \"completed\",\n      };\n    case \"ERROR\":\n      return {\n        data: null,\n        error: action.errorMessage,\n        status: \"completed\",\n      };\n  }\n  return state;\n};\n\nconst useHttp = (requestFunction, startWithPending = false) => {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n};\n\nexport default useHttp;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/AddForm.js",["150","151"],[],"import React, { useState } from \"react\";\n\nimport PostForm from \"./PostForm\";\n\nconst AddForm = ({ addPostHandler, pathname }) => {\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const [postObj, setPostObj] = useState({\n    username: userInfo.name,\n    email: userInfo.email,\n    title: \"\",\n    content: \"\",\n    modifieddate: \"\",\n    picture: userInfo.picture,\n  });\n\n  const formSubmitHandler = (e, addPostHandler, postObj) => {\n    e.preventDefault();\n\n    if (!postObj.title == \"\" && !postObj.content == \"\") {\n      addPostHandler(postObj);\n    } else {\n      window.alert(\"Title and content cannot be empty!\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PostForm\n        sendRequestHandler={addPostHandler}\n        formSubmitHandler={formSubmitHandler}\n        postObj={postObj}\n        setPostObj={setPostObj}\n        pageTitle={\"New Post\"}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddForm;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/UI/PleaseLogin.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/pages/EditPost.js",["152"],[],"import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport useHttp from \"../hook/useHttp\";\nimport { getSinglePost } from \"../lib/firebase-api\";\nimport { editSinglePost } from \"../lib/firebase-api\";\nimport PleaseLogin from \"../components/UI/PleaseLogin\";\nimport EditForm from \"../components/post/EditForm\";\n\nconst EditPost = () => {\n  const isLogin = useSelector((state) => state.login.isLogin);\n\n  const { sendRequest, status } = useHttp(editSinglePost);\n  const params = useParams();\n  const { postid } = params;\n  const navigate = useNavigate();\n\n  const [editPost, setEditPost] = useState({\n    username: \"\",\n    email: \"\",\n    title: \"\",\n    content: \"\",\n    modifieddate: \"\",\n    picture: \"\",\n    postid: \"\",\n  });\n\n  const responseData = useCallback(async () => {\n    const data = await getSinglePost(postid);\n    setEditPost(data);\n    //return data;\n  }, [postid]);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      window.alert(\"Post Edited!\");\n      navigate(\"/mypost\", { replace: true });\n    }\n    responseData();\n  }, [responseData, status]);\n\n  const editPostHandler = (postObj) => {\n    sendRequest(postObj);\n  };\n\n  return (\n    <React.Fragment>\n      {isLogin ? (\n        <EditForm\n          editPostHandler={editPostHandler}\n          postObj={editPost}\n          setPostObj={setEditPost}\n        />\n      ) : (\n        <PleaseLogin pageName={\"Edit Post\"} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default EditPost;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/PostForm.js",["153","154"],[],"import React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport styles from \"./PostForm.module.scss\";\n\nconst PostForm = ({\n  sendRequestHandler,\n  formSubmitHandler,\n  postObj,\n  setPostObj,\n  pageTitle,\n}) => {\n  const getModifiedDate = (dateInfo) => {\n    return `${dateInfo.getFullYear()}/${\n      dateInfo.getMonth() + 1\n    }/${dateInfo.getDate()}`;\n  };\n\n  const navigate = useNavigate();\n  const pathname = useLocation().pathname;\n\n  const titleOnchangeHandler = (e, prePostObj) => {\n    const modifiedDate = getModifiedDate(new Date());\n    const newPostObj = {\n      ...prePostObj,\n      title: e.target.value,\n      modifieddate: modifiedDate,\n    };\n    setPostObj(newPostObj);\n  };\n\n  const contentOnchangeHandler = (e, prePostObj) => {\n    const modifiedDate = getModifiedDate(new Date());\n    const newPostObj = {\n      ...prePostObj,\n      content: e.target.value,\n      modifieddate: modifiedDate,\n    };\n    setPostObj(newPostObj);\n  };\n\n  const goBackHandler = (e) => {\n    e.preventDefault();\n    console.log(pathname[1]);\n\n    if (pathname[1] == \"m\") {\n      navigate(\"/mypost\", { replace: false });\n      return;\n    }\n\n    navigate(\"/allpost\", { replace: false });\n  };\n\n  const testHandler = (e) => {\n    e.preventDefault();\n    console.log(postObj);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={styles.formContainer}>\n        <form>\n          <h2>{pageTitle}</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Title...\"\n            value={postObj[\"title\"]}\n            onChange={(e) => {\n              titleOnchangeHandler(e, postObj);\n            }}\n          ></input>\n\n          <textarea\n            value={postObj[\"content\"]}\n            placeholder=\"Content...\"\n            onChange={(e) => {\n              contentOnchangeHandler(e, postObj);\n            }}\n          ></textarea>\n          <div className={styles.btnContainer}>\n            <button\n              onClick={(e) => {\n                goBackHandler(e);\n              }}\n            >\n              Back\n            </button>\n            <button\n              onClick={(e) => {\n                formSubmitHandler(e, sendRequestHandler, postObj);\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PostForm;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/post/EditForm.js",["155","156","157"],[],"import React, { useState } from \"react\";\n\nimport PostForm from \"./PostForm\";\n\nconst EditForm = ({ editPostHandler, postObj, setPostObj }) => {\n  //const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  //   const [postObj, setPostObj] = useState({\n  //     username: userInfo.name,\n  //     email: userInfo.email,\n  //     title: \"\",\n  //     content: \"\",\n  //     modifieddate: \"\",\n  //     picture: userInfo.picture,\n  //   });\n\n  const formSubmitHandler = (e, editPostHandler, postObj) => {\n    e.preventDefault();\n\n    if (!postObj.title == \"\" && !postObj.content == \"\") {\n      editPostHandler(postObj);\n    } else {\n      window.alert(\"Title and content cannot be empty!\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PostForm\n        sendRequestHandler={editPostHandler}\n        formSubmitHandler={formSubmitHandler}\n        postObj={postObj}\n        setPostObj={setPostObj}\n        pageTitle={\"Edit Post\"}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default EditForm;\n","/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/components/layout/Footer.js",[],[],"/Users/Zuo/Desktop/Reactful-project/reactful-message-board/src/store/ThemeSlice.js",["158"],[],{"ruleId":"159","severity":1,"message":"160","line":12,"column":9,"nodeType":"161","messageId":"162","endLine":15,"endColumn":10,"fix":"163"},{"ruleId":"164","severity":1,"message":"165","line":21,"column":9,"nodeType":"166","messageId":"167","endLine":21,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":46,"column":39,"nodeType":"170","messageId":"171","endLine":46,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":49,"column":46,"nodeType":"170","messageId":"171","endLine":49,"endColumn":48},{"ruleId":"168","severity":1,"message":"169","line":59,"column":39,"nodeType":"170","messageId":"171","endLine":59,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":61,"column":46,"nodeType":"170","messageId":"171","endLine":61,"endColumn":48},{"ruleId":"168","severity":1,"message":"169","line":69,"column":17,"nodeType":"170","messageId":"171","endLine":69,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":69,"column":56,"nodeType":"170","messageId":"171","endLine":69,"endColumn":58},{"ruleId":"172","severity":1,"message":"173","line":74,"column":6,"nodeType":"174","endLine":74,"endColumn":28,"suggestions":"175"},{"ruleId":"164","severity":1,"message":"176","line":76,"column":9,"nodeType":"166","messageId":"167","endLine":76,"endColumn":15},{"ruleId":"172","severity":1,"message":"177","line":25,"column":6,"nodeType":"174","endLine":25,"endColumn":19,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"169","line":27,"column":39,"nodeType":"170","messageId":"171","endLine":27,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":40,"column":28,"nodeType":"170","messageId":"171","endLine":40,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":51,"column":19,"nodeType":"170","messageId":"171","endLine":51,"endColumn":21},{"ruleId":"164","severity":1,"message":"179","line":19,"column":15,"nodeType":"180","messageId":"167","endLine":19,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":23,"endColumn":4},{"ruleId":"168","severity":1,"message":"169","line":20,"column":24,"nodeType":"170","messageId":"171","endLine":20,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":20,"column":50,"nodeType":"170","messageId":"171","endLine":20,"endColumn":52},{"ruleId":"172","severity":1,"message":"185","line":41,"column":6,"nodeType":"174","endLine":41,"endColumn":28,"suggestions":"186"},{"ruleId":"168","severity":1,"message":"169","line":46,"column":21,"nodeType":"170","messageId":"171","endLine":46,"endColumn":23},{"ruleId":"164","severity":1,"message":"187","line":54,"column":9,"nodeType":"166","messageId":"167","endLine":54,"endColumn":20},{"ruleId":"164","severity":1,"message":"188","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":20,"column":24,"nodeType":"170","messageId":"171","endLine":20,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":20,"column":50,"nodeType":"170","messageId":"171","endLine":20,"endColumn":52},{"ruleId":"168","severity":1,"message":"169","line":8,"column":42,"nodeType":"170","messageId":"171","endLine":8,"endColumn":44},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"189","text":"190"},"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginUrl'. Either include it or remove the dependency array. Outer scope values like 'GoogleLogin' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["191"],"'getLog' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isLogin'. Either include it or remove the dependency array.",["192"],"'google' is defined but never used.","Program","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["193"],"'testHandler' is assigned a value but never used.","'useState' is defined but never used.",[395,395]," rel=\"noreferrer\"",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [isLogin, loginUrl]",{"range":"200","text":"201"},"Update the dependencies array to be: [isLogin, sendRequest]",{"range":"202","text":"203"},"Update the dependencies array to be: [navigate, responseData, status]",{"range":"204","text":"205"},[2336,2358],"[isLogin, loginUrl]",[692,705],"[isLogin, sendRequest]",[1158,1180],"[navigate, responseData, status]"]